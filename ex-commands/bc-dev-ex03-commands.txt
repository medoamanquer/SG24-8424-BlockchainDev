==================
section 3.3.1
==================
docker ps -a

**** NOTE ****
cd ~/fabric-tools

./teardownFabric.sh
**********

docker ps -a

**** NOTE ****
docker rm <<container_name>>
docker rm dev-peer0.org1.example.com-vehicle-manufacture-network-0.2.4-deploy0
**********

composer card list

** NOTE **
composer card delete --card admin@vehicle-manufacture-network 

composer card delete --card PeerAdmin@hlfv1
************

cd ~/Blockchain_Redbook_Application/vehicle-manufacture-network/

cat package.json | grep version

cd ~/Blockchain_Redbook_Application/scripts/ex03

./startVehicleManufactureSampleEx03.sh

==================
section 3.3.2
==================
docker ps --filter "name=^/peer0" --filter "name=couchdb" --filter "name=ca" --filter "name=orderer" --format "table{{.Image}}\t{{.Names}}"

docker ps --filter "name=dev-peer0" --format "table {{.Image}}\t{{.Names}}"

docker ps

==================
section 3.3.3
==================
mkdir -p ~/fabric-ca/clients/admin

export FABRIC_CA_CLIENT_HOME=$HOME/fabric-ca/clients/admin

fabric-ca-client enroll -u http://admin:adminpw@localhost:7054

docker logs --follow --since $(date --rfc-3339=seconds | sed 's/ /T/') ca.org1.example.com

export FABRIC_CA_CLIENT_HOME=$HOME/fabric-ca/clients/admin

fabric-ca-client register --id.name admin2 --id.affiliation org1.department1 --id.attrs 'hf.Revoker=true,admin=true:ecert'

mkdir -p ~/fabric-ca/clients/admin2

export FABRIC_CA_CLIENT_HOME=$HOME/fabric-ca/clients/admin2


fabric-ca-client enroll -u http://admin2:<<REPLACE by password_from_register_command>>@localhost:7054


==================
section 3.3.4
====================
No commands
===================

==================

section 3.3.5 
====================
docker logs --follow --since $(date --rfc-3339=seconds | sed 's/ /T/') peer0.org1.example.com 

docker logs --follow --since $(date --rfc-3339=seconds | sed 's/ /T/') orderer.example.com 

composer-rest-server -c admin@vehicle-manufacture-network -n always -w true

http://localhost:3000/explorer

"username": "floura","email": "floura@email.com"

curl -X GET http://localhost:5984/composerchannel_vehicle-manufacture-network/%00Participant:org.acme.vehicle_network.Person%00floura%00?attachments=true


==================
section 3.3.6:
====================

composer-playground

http://localhost:8080

localStorage.clear()
---
"companyId": "nicecars",
"name": "Nice Cars"
---

"vin": "2FAF",
"trim": "Sport",
"interior": "Leather",
"extras": [],
"make": "resource:org.acme.vehicle_network.Manufacturer#nicecars",
"modelType": "Sportino",
"colour": "Red",
"yearOfManufacture": 2018
---

==================
section 3.3.7:
==================
http://localhost:3000
**** IF ERROR ****
composer-rest-server -c admin@vehicle-manufacture-network -n always -w true
*******************

cd ~/Blockchain_Redbook_Application/Vehicle-Manufacture-App

npm install

npm start

http://localhost:4200

http://localhost:3000/explorer 

==================
section 3.3.8
===================
localhost:3000/explorer
 
"orderStatus": "DELIVERED",
"order": "org.acme.vehicle_network.Order#101"

==================
section 3.3.9
===================
cd ~/Blockchain_Redbook_Application/vehicle-manufacture-network/models/

code org.acme.vehicle_network.cto

transaction InspectVehicle {
	--> Vehicle vehicle
}

--------
asset Vehicle identified by vin {
  o String vin
  o String trim
  o String interior
  o String[] extras
  --> Manufacturer make
  o String modelType
  o String colour
  o Integer yearOfManufacture default = 2018 range = [2018, ]
  o Boolean isImportable optional
-------
cd ~/Blockchain_Redbook_Application/vehicle-manufacture-network/lib

code script.js

/**
 * Inspect the vehicle's manufacture date to deem whether it is importable
 * @param {org.acme.vehicle_network.InspectVehicle} inspecVehicle - the InspectVehicle transaction
 * @transaction
 */
function inspectVehicle(inspectVehicleRequest) {
  console.log('inspectVehicle');

   var factory = getFactory();
   var namespace = 'org.acme.vehicle_network';
   var vr;
 
  return getAssetRegistry(namespace + '.Vehicle')
   .then(function(vehicleRegistry) {
    vr = vehicleRegistry;
    return vehicleRegistry.get(inspectVehicleRequest.vehicle.getIdentifier())
   })
   .then(function(vehicle) {
    if (vehicle.yearOfManufacture < 2020) {
      vehicle.isImportable = false;
    } else {
      vehicle.isImportable = true;
    }
    return vr.update(vehicle);
   });
}

/**
cd ~/Blockchain_Redbook_Application/vehicle-manufacture-network/

code package.json

cd ~/Blockchain_Redbook_Application/vehicle-manufacture-network

npm run prepublish

composer network install -a dist/vehicle-manufacture-network.bna -c PeerAdmin@hlfv1

composer network upgrade -n vehicle-manufacture-network -V 0.2.5 -c PeerAdmin@hlfv1

composer-rest-server -c admin@vehicle-manufacture-network -n always -w true

cd ~/Blockchain_Redbook_Application/scripts/ex03

./createAdditionalVehicles.sh

curl -X GET --header 'Accept: application/json' 'http://localhost:3000/api/org.acme.vehicle_network.Vehicle/AB23'

curl -X GET --header 'Accept: application/json' 'http://localhost:3000/api/org.acme.vehicle_network.Vehicle/AB89'

curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ "$class":"org.acme.vehicle_network.InspectVehicle", "vehicle": "org.acme.vehicle_network.Vehicle#AB23"}' 'http://localhost:3000/api/org.acme.vehicle_network.InspectVehicle'

curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ "$class":"org.acme.vehicle_network.InspectVehicle", "vehicle": "org.acme.vehicle_network.Vehicle#AB89" }' 'http://localhost:3000/api/org.acme.vehicle_network.InspectVehicle'

curl -X GET --header 'Accept: application/json' 'http://localhost:3000/api/org.acme.vehicle_network.Vehicle/AB23'

curl -X GET --header 'Accept: application/json' 'http://localhost:3000/api/org.acme.vehicle_network.Vehicle/AB89'


==================
section 3.3.10
======================


cd ~/Blockchain_Redbook_Application/scripts/ex03

./stopVehicleManufactureSampleEx03.sh

docker rm -f $(docker ps -aq)
